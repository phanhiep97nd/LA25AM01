/**
 * Copyright(C) 2020  Luvina Software
 *CDDatabase.java, 11:08:51 PM Phan Văn Hiệp
 */
package bai2;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

/**
 * Tạo các hàm nghiệp vụ
 * 
 * @author Phan Văn Hiệp
 */
public class CDDatabase {
	/**
	 * Thêm CD
	 * 
	 * @param cd Truyền vào cd muốn thêm
	 * @return có thêm thành công hay không!
	 */
	public boolean insertCD(CD cd) {
		Connection conn = null;
		PreparedStatement pstm = null;
		String artistInput = cd.getArtist();
		String titleInput = cd.getTitle();
		try {
			conn = ConnectionDB.openConnection();
			pstm = conn.prepareStatement("insert into cds values('" + artistInput + "','" + titleInput + "');");
			pstm.execute();
			conn.close();
			pstm.close();
			return true;
		} catch (SQLException e) {
			e.printStackTrace();
			return false;
		}
	}

	/**
	 * Xóa CD
	 * 
	 * @param cd Truyền vào cd muốn xóa
	 * @return có xóa thành công hay không!
	 */
	public boolean removeCD(CD cd) {
		Connection conn = null;
		PreparedStatement pstm = null;
		boolean check = true;
		try {
			conn = ConnectionDB.openConnection();
			pstm = conn.prepareStatement(
					"DELETE FROM cds WHERE artist='" + cd.getArtist() + "' AND title = '" + cd.getTitle() + "';");
			pstm.executeUpdate();
			conn.close();
			pstm.close();
		} catch (SQLException e) {
			e.printStackTrace();
			check = false;
		}
		return check;
	}

	/**
	 * Tìm CD theo title
	 * 
	 * @param input Truyền vào title muốn tìm
	 * @return Trả về danh sách tìm kiếm được!
	 */
	public ArrayList<CD> findByTitle(String input) {
		ArrayList<CD> lstCD = new ArrayList<CD>();
		Connection conn = null;
		PreparedStatement pstm = null;
		try {
			conn = ConnectionDB.openConnection();
			pstm = conn.prepareStatement("SELECT * FROM cds WHERE title LIKE '%" + input + "%';");
			ResultSet rs = pstm.executeQuery();
			while (rs.next()) {
				CD cd = new CD();
				cd.setArtist(rs.getString("artist"));
				cd.setTitle(rs.getString("title"));
				lstCD.add(cd);
			}
			conn.close();
			rs.close();
			pstm.close();
			return lstCD;
		} catch (SQLException e) {
			e.printStackTrace();
			return null;
		}
	}

	/**
	 * Tìm CD theo artist
	 * 
	 * @param input Truyền vào artist muốn tìm
	 * @return Trả về danh sách tìm kiếm được!
	 */
	public ArrayList<CD> findByArtist(String input) {
		ArrayList<CD> lstCD = new ArrayList<CD>();
		Connection conn = null;
		PreparedStatement pstm = null;
		try {
			conn = ConnectionDB.openConnection();
			pstm = conn.prepareStatement("SELECT * FROM cds WHERE artist='" + input + "';");
			ResultSet rs = pstm.executeQuery();
			while (rs.next()) {
				CD cd = new CD();
				cd.setArtist(rs.getString("artist"));
				cd.setTitle(rs.getString("title"));
				lstCD.add(cd);
			}
			conn.close();
			rs.close();
			pstm.close();
			return lstCD;
		} catch (SQLException e) {
			e.printStackTrace();
			return null;
		}
	}

}

